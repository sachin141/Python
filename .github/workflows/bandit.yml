name: Bandit Code Scan

on:
  pull_request:
    branches:
      - master


jobs:
  scan:
    name: Scan Python Code with Bandit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        id: bandit
        run: bandit -r . -f json -o bandit.json || echo "::set-output name=bandit_failed::true"

      - name: Show Bandit Results
        if: steps.bandit.outputs.bandit_failed == 'true'
        run: cat bandit.json

      - name: Check Bandit Results
        if: steps.bandit.outputs.bandit_failed == 'true'
        id: check_bandit
        run: echo "::set-output name=block_pull_request::$(jq '.results | map(select(.issue_severity == \"CRITICAL\" )) | length > 0' bandit.json)"

      - name: Block or Merge Pull Request
        if: steps.check_bandit.outputs.block_pull_request == 'true'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'Block'
            })
            github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            })

      - name: Auto-Merge Pull Request
        if: steps.check_bandit.outputs.block_pull_request != 'true'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'Successful........'
            })
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })


      - name: Trigger Another Workflow
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
        env:
          GH_PAT: ${{ secrets.PAT }}
        run: |
          curl -X POST \
            -H "Authorization: token $GH_PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/dependencycheck.yml/dispatches \
            -d '{"ref": "main"}'

